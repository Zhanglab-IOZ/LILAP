SAMPLES = ["C01"]

include: "rules/rm_adaptors.smk"
include: "rules/hifiasm.evalutation.smk"
include: "rules/automatic_polsih.smk"
include: "rules/variation_calling.smk"



rule all:
    input:
        expand("data/{sample}.ccs.cut19bp.fasta", sample=SAMPLES),
        expand("results/summary/{sample}.ccs.fasta.readlength", sample=SAMPLES),
        expand("results/asm/{sample}.ccs.asm.p_ctg.fa", sample=SAMPLES),
        expand("results/asm/quast/{sample}.ccs.quast_LG/report.tsv", sample=SAMPLES),
        expand("results/asm/{sample}.ccs.BUSCO/short_summary.specific.diptera_odb10.{sample}.ccs.BUSCO.json", sample=SAMPLES),
        expand("results/asm/{sample}.ccs.merqury/{sample}.ccs.hifiasm.p.qv", sample=SAMPLES),
        expand("results/summary/{sample}.zmw.count.out.asm.mapq_more_0.out1", sample=SAMPLES),

        expand("results/polish/{sample}.ccs.asm.p_ctg.fa.merfin.out.polish.fa", sample=SAMPLES),
        expand("results/polish/{sample}.ccs.polish.BUSCO/short_summary.specific.diptera_odb10.{sample}.ccs.polish.BUSCO.json", sample=SAMPLES),
        expand("results/polish/quast/{sample}.ccs.polish.quast_LG/report.tsv", sample=SAMPLES),
        expand("results/polish/{sample}.ccs.polish.merqury/{sample}.ccs.hifiasm.p.polish.qv", sample=SAMPLES),

        expand("results/SV/sv.{sample}.ccs.hifiasm.p.filter0", sample=SAMPLES)





